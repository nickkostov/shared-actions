name: Build Container Reusable Workflow

on: 
  workflow_call:
    inputs:
      tag:
        required: true
        type: string
        description: The container image tag to use.
      runner:
        required: true
        type: string
        description: Self-hosted runner label.
      image_name:
        required: true
        type: string
        description: The name of the image that we are building
#      env:
#        required: true
#        type: string
#        description: Environment (e.g., dev, uat, main).

# Define environment variables for use in the workflow
env:
  container_registry_url: ghcr.io/nickkostov

jobs:
  build_container_image:
    name: Build Container Image
    runs-on: ${{ inputs.runner }}
    permissions:
      contents: write
      packages: write
      actions: read

    steps:
      # Print the container image tag
      - name: Print Container Image Tag
        run: |
          echo "Container image tag: ${{ github.repository }}:${{ inputs.tag }}"

      # Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.base_ref }}

      # Set up Docker Buildx
      - name: Set Up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Log in to GitHub Container Registry
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.container_registry_url }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Build and push the Docker image
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: docker/Dockerfile
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: ${{ env.container_registry_url }}/${{ inputs.image_name }}/${{ inputs.tag }}
          build-args: |
            LABEL=${{ github.server_url }}/${{ github.repository }}
#            ENV=${{ inputs.env }}
